{"createdAt":"2024-12-01T12:02:13.509Z","updatedAt":"2024-12-01T12:34:09.000Z","id":"15iK5Bu71CnKxT62","name":"n8n_Credentials_Backup","active":false,"nodes":[{"parameters":{},"id":"d8f7aa8f-8add-43b9-a8f4-2d1a68654948","name":"On clicking 'execute'","type":"n8n-nodes-base.manualTrigger","position":[340,460],"typeVersion":1},{"parameters":{"content":"## Subworkflow","height":750.8363163824032,"width":2086.845881354743,"color":6},"id":"a42aeb2d-cb50-4498-94f1-8b8fb61130ab","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[-100,840],"typeVersion":1},{"parameters":{},"id":"5ca8f288-9f71-4b13-af1d-8c593005acd2","name":"Execute Workflow Trigger","type":"n8n-nodes-base.executeWorkflowTrigger","position":[-40,1220],"typeVersion":1},{"parameters":{"assignments":{"assignments":[{"id":"8d513345-6484-431f-afb7-7cf045c90f4f","name":"Done","type":"boolean","value":true}]},"options":{}},"id":"8753057c-5a09-4872-ab90-8cff11587651","name":"Return","type":"n8n-nodes-base.set","position":[1780,1040],"typeVersion":3.3},{"parameters":{"url":"={{ $json.download_url }}","options":{}},"id":"c50593b8-655a-4346-b1a1-21e3adf89b54","name":"Get File","type":"n8n-nodes-base.httpRequest","position":[880,920],"typeVersion":4.2},{"parameters":{"conditions":{"options":{"version":1,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"45ce825e-9fa6-430c-8931-9aaf22c42585","operator":{"type":"string","operation":"empty","singleValue":true},"leftValue":"={{ $json.content }}","rightValue":""},{"id":"9619a55f-7fb1-4f24-b1a7-7aeb82365806","operator":{"type":"string","operation":"notExists","singleValue":true},"leftValue":"={{ $json.error }}","rightValue":""}]},"options":{}},"id":"5bfff2e5-8764-4c61-9faa-123f3652d397","name":"If file too large","type":"n8n-nodes-base.if","position":[680,940],"typeVersion":2},{"parameters":{},"id":"20e838a1-7ad8-43da-b1f5-c551d556d011","name":"Merge Items","type":"n8n-nodes-base.merge","position":[680,1200],"typeVersion":2},{"parameters":{"jsCode":"const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();"},"id":"c9161b55-2e8d-4d0e-98e7-6841064de28c","name":"isDiffOrNew","type":"n8n-nodes-base.code","position":[880,1200],"typeVersion":1},{"parameters":{"dataType":"string","value1":"={{$json.github_status}}","rules":{"rules":[{"value2":"same"},{"value2":"different","output":1},{"value2":"new","output":2}]}},"id":"097e9663-f86a-46f5-bfa4-359270469efa","name":"Check Status","type":"n8n-nodes-base.switch","position":[1100,1200],"typeVersion":1},{"parameters":{},"id":"b2a7f42d-df80-407d-8995-45b5c383a21f","name":"Same file - Do nothing","type":"n8n-nodes-base.noOp","position":[1320,1040],"typeVersion":1},{"parameters":{},"id":"e82cb299-059b-4a15-bbc5-9e1422c462c7","name":"File is different","type":"n8n-nodes-base.noOp","position":[1320,1200],"typeVersion":1},{"parameters":{},"id":"a8607a15-655f-478a-91fc-fd77c1c2bd06","name":"File is new","type":"n8n-nodes-base.noOp","position":[1320,1360],"typeVersion":1},{"parameters":{"resource":"file","owner":{"__rl":true,"mode":"name","value":"={{ $('Globals').item.json.repo.owner }}"},"repository":{"__rl":true,"mode":"name","value":"={{ $('Globals').item.json.repo.name }}"},"filePath":"={{ $('Globals').item.json.repo.path }}{{$('Execute Workflow Trigger').first().json.id}}.json","fileContent":"={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"ffb94e0f-ea66-4ffc-9d64-759baf9c1254","name":"Create new file","type":"n8n-nodes-base.github","position":[1540,1360],"typeVersion":1},{"parameters":{"resource":"file","operation":"edit","owner":{"__rl":true,"mode":"name","value":"={{ $('Globals').item.json.repo.owner }}"},"repository":{"__rl":true,"mode":"name","value":"={{ $('Globals').item.json.repo.name }}"},"filePath":"={{ $('Globals').item.json.repo.path }}{{$('Execute Workflow Trigger').first().json.id}}.json","fileContent":"={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"7eefa8c6-3aa5-4f3f-8638-a86feee6cee6","name":"Edit existing file","type":"n8n-nodes-base.github","position":[1540,1180],"typeVersion":1},{"parameters":{"options":{}},"id":"53b206fb-0f5a-4805-aa32-d101d1c5dae6","name":"Loop Over Items","type":"n8n-nodes-base.splitInBatches","position":[940,560],"typeVersion":3},{"parameters":{"rule":{"interval":[{"field":"hours","hoursInterval":2}]}},"id":"debe0b6a-8702-4814-9983-9b9cddd65e63","name":"Schedule Trigger","type":"n8n-nodes-base.scheduleTrigger","position":[340,660],"typeVersion":1.2},{"parameters":{"content":"## Backup to GitHub \nThis workflow will backup all instance credentials to GitHub.\n\nThe files are saved `ID.json` for the filename.\n\n### Setup\nOpen `Globals` node and update the values below ðŸ‘‡\n\n- **repo.owner:** your Github username\n- **repo.name:** the name of your repository\n- **repo.path:** the folder to use within the repository. If it doesn't exist it will be created.\n\n\nIf your username was `john-doe` and your repository was called `n8n-backups` and you wanted the credentials to go into a `credentials` folder you would set:\n\n- repo.owner - john-doe\n- repo.name - n8n-backups\n- repo.path - credentials/\n\n\nThe workflow calls itself using a subworkflow, to help reduce memory usage.","height":596.4810912485963,"width":365.19481715599653,"color":4},"id":"4f7eb233-32cd-4f2c-b12b-b92c9d051376","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[-100,218],"typeVersion":1},{"parameters":{"content":"## Main workflow loop","height":434.88564057365943,"width":1028.7522287279464,"color":7},"id":"a8fa1e2e-ef11-4e26-8b8d-7b284f45638d","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[300,380],"typeVersion":1},{"parameters":{"resource":"file","operation":"get","owner":{"__rl":true,"mode":"name","value":"={{ $json.repo.owner }}"},"repository":{"__rl":true,"mode":"name","value":"={{ $json.repo.name }}"},"filePath":"={{ $json.repo.path }}{{ $('Execute Workflow Trigger').item.json.id }}.json","asBinaryProperty":false,"additionalParameters":{}},"id":"673a4b63-9892-4a60-b762-e9c0bb178bc0","name":"Get file data","type":"n8n-nodes-base.github","position":[480,940],"typeVersion":1,"alwaysOutputData":true,"continueOnFail":true},{"parameters":{"assignments":{"assignments":[{"id":"6cf546c5-5737-4dbd-851b-17d68e0a3780","name":"repo.owner","type":"string","value":"solomon"},{"id":"452efa28-2dc6-4ea3-a7a2-c35d100d0382","name":"repo.name","type":"string","value":"n8n-backup"},{"id":"81c4dc54-86bf-4432-a23f-22c7ea831e74","name":"repo.path","type":"string","value":"credentials/"}]},"options":{}},"id":"68601fe5-ab44-433a-86b8-831c81aaf5ee","name":"Globals","type":"n8n-nodes-base.set","position":[280,1100],"typeVersion":3.4},{"parameters":{"command":"npx n8n export:credentials --all --decrypted"},"id":"43228950-20fb-45dc-90f7-6620cc9b6a06","name":"Execute Command","type":"n8n-nodes-base.executeCommand","position":[560,560],"typeVersion":1},{"parameters":{"jsCode":"// Function to beautify JSON\nfunction beautifyJson(jsonString) {\n  try {\n    // Parse the JSON string\n    const jsonObject = JSON.parse(jsonString);\n\n    // Format the JSON with indentation\n    return jsonObject; // Return the parsed object directly\n  } catch (error) {\n    // Return the error message if JSON is invalid\n    return `Invalid JSON: ${error.message}`;\n  }\n}\n\n// Retrieve the JSON object from the input data\nconst input = $input.all()[0].json;\n\n// Extract the JSON string from the stdout field\nconst jsonString = input.stdout.match(/\\[{.*}\\]/s);\n\n// Check if a valid JSON string is found\nif (!jsonString) {\n  return {\n    json: {\n      error: \"No valid JSON string found in stdout.\"\n    }\n  };\n}\n\n// Beautify the JSON\nconst beautifiedJson = beautifyJson(jsonString[0]);\n\n// Output the beautified JSON, ensuring each entry is in an object with a 'json' key\nconst output = beautifiedJson.map(entry => ({ json: entry }));\n\n// Return the output\nreturn output;\n"},"id":"4c146ba3-a553-444d-b1dd-5ebf2ecad1b6","name":"JSON formatting","type":"n8n-nodes-base.code","position":[740,560],"typeVersion":2},{"parameters":{"workflowId":"={{ $workflow.id }}","mode":"each","options":{}},"id":"e217bf52-90ce-4325-a4ac-d9def1f6991c","name":"Execute Workflow","type":"n8n-nodes-base.executeWorkflow","position":[1160,560],"typeVersion":1},{"parameters":{"content":"## Edit this node ðŸ‘‡","height":80,"width":150,"color":4},"id":"a940a3ae-a982-4f20-ac1b-8ba57d3c17a9","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","position":[240,1000],"typeVersion":1}],"connections":{"Globals":{"main":[[{"node":"Get file data","type":"main","index":0}]]},"Get File":{"main":[[{"node":"Merge Items","type":"main","index":0}]]},"File is new":{"main":[[{"node":"Create new file","type":"main","index":0}]]},"Merge Items":{"main":[[{"node":"isDiffOrNew","type":"main","index":0}]]},"isDiffOrNew":{"main":[[{"node":"Check Status","type":"main","index":0}]]},"Check Status":{"main":[[{"node":"Same file - Do nothing","type":"main","index":0}],[{"node":"File is different","type":"main","index":0}],[{"node":"File is new","type":"main","index":0}]]},"Get file data":{"main":[[{"node":"If file too large","type":"main","index":0}]]},"Create new file":{"main":[[{"node":"Return","type":"main","index":0}]]},"Execute Command":{"main":[[{"node":"JSON formatting","type":"main","index":0}]]},"JSON formatting":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"Execute Workflow","type":"main","index":0}]]},"Execute Workflow":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"Execute Command","type":"main","index":0}]]},"File is different":{"main":[[{"node":"Edit existing file","type":"main","index":0}]]},"If file too large":{"main":[[{"node":"Get File","type":"main","index":0}],[{"node":"Merge Items","type":"main","index":0}]]},"Edit existing file":{"main":[[{"node":"Return","type":"main","index":0}]]},"On clicking 'execute'":{"main":[[{"node":"Execute Command","type":"main","index":0}]]},"Same file - Do nothing":{"main":[[{"node":"Return","type":"main","index":0}]]},"Execute Workflow Trigger":{"main":[[{"node":"Merge Items","type":"main","index":1},{"node":"Globals","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"23ad65e3-5a8b-42e6-a414-944dda4bc22f","triggerCount":0,"tags":[]}